"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Avatar: () => Avatar,
  DropdownMenu: () => DropdownMenu,
  ScrollArea: () => ScrollArea,
  Stacked: () => Stacked,
  StyledAvatar: () => StyledAvatar,
  zLayers: () => zLayers
});
module.exports = __toCommonJS(src_exports);

// src/Avatar/index.ts
var Avatar = __toESM(require("@radix-ui/react-avatar"));

// src/Avatar/StyledAvatar.tsx
var import_nanoid = require("nanoid");
var import_react = require("react");
var import_string_hash = __toESM(require("string-hash"));
var import_tinycolor2 = __toESM(require("tinycolor2"));
var AvatarPrimitive = __toESM(require("@radix-ui/react-avatar"));
var import_react2 = require("@stitches/react");
var import_jsx_runtime = require("react/jsx-runtime");
var Root2 = (0, import_react2.styled)(AvatarPrimitive.Root, {
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  verticalAlign: "middle",
  overflow: "hidden",
  userSelect: "none"
});
var Image2 = (0, import_react2.styled)(AvatarPrimitive.Image, {
  width: "100%",
  height: "100%",
  objectFit: "cover",
  borderRadius: "inherit"
});
var StyledFallback = (0, import_react2.styled)(AvatarPrimitive.Fallback, {
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  width: "100%",
  height: "100%",
  borderRadius: "inherit"
});
var GradientSvg = (0, import_react2.styled)("svg", {
  position: "absolute",
  top: 0,
  left: 0,
  width: "100%",
  height: "100%",
  borderRadius: "inherit"
});
var Fallback2 = ({
  id,
  name,
  randomColor,
  children,
  ...props
}) => {
  const [fallbackId, setFallbackId] = (0, import_react.useState)("");
  (0, import_react.useEffect)(() => {
    setFallbackId(id ?? name ?? (0, import_nanoid.nanoid)());
  }, [id, name]);
  if (randomColor) {
    const encodedName = encodeURI(fallbackId.toString().split(" ").join("_"));
    const hashed = (0, import_string_hash.default)(encodedName);
    const c = (0, import_tinycolor2.default)({ h: hashed % 360, s: 0.95, l: 0.5 });
    const c1 = c.toHexString();
    const c2 = c.triad()[1].toHexString();
    const gradientBackground = /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(GradientSvg, {
      role: "img",
      "aria-label": name,
      viewBox: "0 0 80 80",
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime.jsx)("defs", {
          children: /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("linearGradient", {
            x1: "0%",
            y1: "0%",
            x2: "100%",
            y2: "100%",
            id: hashed.toString(),
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime.jsx)("stop", {
                stopColor: c1,
                offset: "0%"
              }),
              /* @__PURE__ */ (0, import_jsx_runtime.jsx)("stop", {
                stopColor: c2,
                offset: "100%"
              })
            ]
          })
        }),
        /* @__PURE__ */ (0, import_jsx_runtime.jsx)("g", {
          stroke: "none",
          strokeWidth: "1",
          fill: "none",
          children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)("rect", {
            fill: `url(#${hashed.toString()})`,
            x: "0",
            y: "0",
            width: "100%",
            height: "100%"
          })
        })
      ]
    });
    return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(StyledFallback, {
      ...props,
      children: [
        gradientBackground,
        children
      ]
    });
  }
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(StyledFallback, {
    ...props,
    children
  });
};
var StyledAvatar = Object.assign({}, { Root: Root2, Image: Image2, Fallback: Fallback2 });

// src/DropdownMenu/DropdownMenu.tsx
var DropdownMenu = __toESM(require("@radix-ui/react-dropdown-menu"));

// src/ScrollArea/ScrollArea.tsx
var ScrollArea = __toESM(require("@radix-ui/react-scroll-area"));

// src/Stacked/Stacked.tsx
var React = __toESM(require("react"));
var import_utils = require("@zolplay/utils");
var import_jsx_runtime2 = require("react/jsx-runtime");
var LAYER_INCREMENT = 1;
var zLayers = Object.freeze({
  base: 0,
  content: 50,
  dropdown: 1e3,
  sticky: 2e3,
  modalBackdrop: 3e3,
  offCanvas: 4e3,
  modal: 5e3,
  popover: 6e3,
  tooltip: 7e3,
  ceiling: 1e4
});
var Stacked = ({
  className,
  children,
  layer = "content",
  as,
  above,
  below
}) => {
  React.useEffect(() => {
    if (above && below) {
      throw new Error("Cannot use both above and below props");
    }
  }, [above, below]);
  const zIndex = React.useMemo(() => {
    const layerIndex = zLayers[layer];
    if (above) {
      return layerIndex + LAYER_INCREMENT * (typeof above === "number" ? above : 1);
    } else if (below) {
      return layerIndex - LAYER_INCREMENT * (typeof below === "number" ? below : 1);
    }
    return layerIndex;
  }, [layer, above, below]);
  const Element = as || "div";
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(Element, {
    className: (0, import_utils.clsxm)("relative", className),
    style: {
      zIndex
    },
    children
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Avatar,
  DropdownMenu,
  ScrollArea,
  Stacked,
  StyledAvatar,
  zLayers
});
