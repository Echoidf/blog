import { jsx as _jsx } from "react/jsx-runtime";
import { Suspense } from 'react';
import { getTweet } from './api/index.js';
import { defaultComponents } from './components.js';
import { EmbeddedTweet } from './embedded-tweet.js';
import { TweetSkeleton } from './tweet-skeleton.js';
const TweetContent = async ({ id , components , onError  })=>{
    let error;
    const tweet = id ? await getTweet(id).catch((err)=>{
        if (onError) {
            error = onError(err);
        } else {
            console.error(err);
            error = err;
        }
    }) : undefined;
    if (!tweet) {
        const TweetNotFound = (components == null ? void 0 : components.TweetNotFound) || defaultComponents.TweetNotFound;
        return /*#__PURE__*/ _jsx(TweetNotFound, {
            error: error
        });
    }
    return /*#__PURE__*/ _jsx(EmbeddedTweet, {
        tweet: tweet,
        components: components
    });
};
export const Tweet = ({ fallback =/*#__PURE__*/ _jsx(TweetSkeleton, {}) , ...props })=>/*#__PURE__*/ _jsx(Suspense, {
        fallback: fallback,
        children: /*#__PURE__*/ _jsx(TweetContent, {
            ...props
        })
    });
